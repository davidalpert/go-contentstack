/*
Contentstack Content Delivery API OpenAPI Specification

<p>The Content Delivery API (CDA), available at cdn.contentstack.com, is a read-only API used to retrieve content from your Contentstack account and deliver it to your web or mobile properties. Contentstack provides an OpenAPI JSON file that consists of a set of preconfigured REST API requests that will make it easy for you to get started with the Contentstack Delivery APIs and try out our API requests through the Swagger Editor. </p><p>Here are the details of the important information key used in this file: </p><table border=\"1\"> <tbody> <tr>  <td>Key  </td>  <td>Value  </td> </tr> <tr>  <td>Base URL  </td>  <td>   <ul>    <li>North America: https://cdn.contentstack.io/</li>    <li>Europe: https://eu-cdn.contentstack.com/</li>   </ul>  </td> </tr> <tr>  <td>api_key  </td>  <td>   <ul>    <li>North America:&nbsp;blt02f7b45378b008ee</li>    <li>Europe:&nbsp;bltd88b56bcda5594d5</li>   </ul>  </td> </tr> <tr>  <td>access_token  </td>  <td>   <ul>    <li>North America:&nbsp;cs5b69faf35efdebd91d08bcf4</li>    <li>Europe:&nbsp;cs408c732861b2aa495971ae51</li>   </ul>  </td> </tr> <tr>  <td> environment  </td>  <td>   <ul>    <li>North America:&nbsp;production</li>    <li>Europe:&nbsp;production</li>   </ul>  </td> </tr> </tbody> </table><p><strong>CDA OpenAPI Details:</strong> </p><ul>  <li>Version: 2.0.2</li>  <li>Last Updated: April 12, 2022</li> </ul>

API version: 2.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package management

import (
	"bytes"
	"context"
	"io/ioutil"
	"net/http"
	"net/url"
	"strings"
)


// QueriesApiService QueriesApi service
type QueriesApiService service

type ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest struct {
	ctx context.Context
	ApiService *QueriesApiService
	contentTypeUid string
	locale *string
	includeFallback *string
	includeBranch *string
	query *string
	include *string
	limit *string
	skip *string
	asc *string
	desc *string
	onlyBASE *string
	exceptBASE *string
	includeCount *string
}

// Enter the code of the language of which the entries needs to be included. Only the entries published in this locale will be displayed.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Locale(locale string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.locale = &locale
	return r
}

// Enter &#39;true&#39; to include the published localized content from the fallback locale when the specified locale does not contain published content.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) IncludeFallback(includeFallback string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.includeFallback = &includeFallback
	return r
}

// Set this to true to include the _branch top-level key in the response. This key states the unique ID of the branch where the concerned Contentstack module resides.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) IncludeBranch(includeBranch string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.includeBranch = &includeBranch
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Query(query string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.query = &query
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Include(include string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.include = &include
	return r
}

// Enter the maximum number of entries to be returned.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Limit(limit string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.limit = &limit
	return r
}

// Enter the number of entries to be skipped.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Skip(skip string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.skip = &skip
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Asc(asc string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.asc = &asc
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Desc(desc string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.desc = &desc
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) OnlyBASE(onlyBASE string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.onlyBASE = &onlyBASE
	return r
}

// Enter the actual query that will be executed to retrieve entries. This query should be in JSON format.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) ExceptBASE(exceptBASE string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.exceptBASE = &exceptBASE
	return r
}

// Enter &#39;true&#39;&amp;nbsp;to get the total count of the entries.
func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) IncludeCount(includeCount string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	r.includeCount = &includeCount
	return r
}

func (r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) Execute() (*http.Response, error) {
	return r.ApiService.GetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorExecute(r)
}

/*
GetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperator Get all entries | Equals Operator | Equals Operator Within Group | Equals Operator Within Modular Blocks | Not-equals Operator.....

<p>For more information on the individual requests, click on their respective documentation links below.</p>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#get-all-entries" target=_blank>Get all entries</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#equals-operator" target=_blank>Equals Operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#equals-operator-within-group" target=_blank>Equals Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#equals-operator-within-modular-blocks" target=_blank>Equals Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#not-equals-operator" target=_blank>Not-equals Operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#not-equals-operator-within-group" target=_blank>Not-equals Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#not-equals-operator-within-modular-blocks" target=_blank>Not-equals Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-equals-operator" target=_blank>Array Equals Operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-equals-operator-within-group" target=_blank>Array Equals Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-equals-operator-within-modular-blocks" target=_blank>Array Equals Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-not-equals-operator" target=_blank>Array Not-equals Operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-not-equals-operator-within-group" target=_blank>Array Not-equals Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#array-not-equals-operator-within-modular-blocks" target=_blank>Array Not-equals Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#include-reference" target=_blank>Include Reference</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#include-reference-within-group" target=_blank>Include Reference Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#include-reference-within-modular-blocks" target=_blank>Include Reference Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-equals" target=_blank>Reference Search Equals</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-equals-within-group" target=_blank>Reference Search Equals Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-equals-within-modular-blocks" target=_blank>Reference Search Equals Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-not-equals" target=_blank>Reference Search Not-equals</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-not-equals-within-group" target=_blank>Reference Search Not-equals Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#reference-search-not-equals-within-modular-blocks" target=_blank>Reference Search Not-equals Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#search-by-regex" target=_blank>Search by Regex</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#search-by-regex-within-group" target=_blank>Search By Regex Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#search-by-regex-within-modular-blocks" target=_blank>Search by Regex Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#and-operator" target=_blank>AND operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#and-operator-within-group" target=_blank>AND Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#and-operator-within-modular-blocks" target=_blank>AND Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#or-operator" target=_blank>OR Operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#or-operator-within-group" target=_blank>OR Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#or-operator-within-modular-blocks" target=_blank>OR Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than" target=_blank>Less Than</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than-within-group" target=_blank>Less Than Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than-operator-within-modular-blocks" target=_blank>Less Than Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than-or-equal-to" target=_blank>Less Than or Equal To</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than-or-equal-to-within-group" target=_blank>Less Than Or Equal To Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#less-than-or-equal-to-operator-within-modular-blocks" target=_blank>Less Than Or Equal To Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than" target=_blank>Greater Than</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than-within-group" target=_blank>Greater Than Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than-operator-within-modular-blocks" target=_blank>Greater Than Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than-or-equal-to" target=_blank>Greater Than or Equal To</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than-or-equal-to-within-group" target=_blank>Greater Than Or Equal To Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#greater-than-or-equal-to-operator-within-modular-blocks" target=_blank>Greater Than Or Equal To Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#limit" target=_blank>Limit</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#skip" target=_blank>Skip</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#order-by-asc" target=_blank>Order by asc</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#order-by-asc-operator-within-group" target=_blank>Order by asc Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#order-by-desc" target=_blank>Order by desc</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#order-by-desc-within-group" target=_blank>Order By desc Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#order-by-desc-operator-within-modular-blocks" target=_blank>Order by desc Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exists" target=_blank>Exists</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exists-within-group" target=_blank>Exists Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exists-operator-within-modular-blocks" target=_blank>Exists Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#only-operator" target=_blank>Only operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#only-operator-within-group" target=_blank>Only Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#only-operator-within-modular-blocks" target=_blank>Only Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exclude-operator" target=_blank>Exclude operator</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exclude-operator-within-group" target=_blank>Exclude Operator Within Group</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#exclude-operator-within-modular-blocks" target=_blank>Exclude Operator Within Modular Blocks</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#count" target=_blank>Count</a></li></ul>
<ul><li><a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/#pagination" target=_blank>Pagination</a></li></ul><p><strong>Note</strong>: The parameter values present here correspond to the AWS North America Region. To find the values corresponding to other regions, please refer to the <a href="https://www.contentstack.com/docs/developers/apis/content-delivery-api/">Content Delivery API</a> doc.<strong></strong></p>

 @param ctx context.Context - for authentication, logging, cancellation, deadlines, tracing, etc. Passed from http.Request or context.Background().
 @param contentTypeUid
 @return ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest
*/
func (a *QueriesApiService) GetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperator(ctx context.Context, contentTypeUid string) ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest {
	return ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest{
		ApiService: a,
		ctx: ctx,
		contentTypeUid: contentTypeUid,
	}
}

// Execute executes the request
func (a *QueriesApiService) GetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorExecute(r ApiGetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperatorRequest) (*http.Response, error) {
	var (
		localVarHTTPMethod   = http.MethodGet
		localVarPostBody     interface{}
		formFiles            []formFile
	)

	localBasePath, err := a.client.cfg.ServerURLWithContext(r.ctx, "QueriesApiService.GetallentriesEqualsoperatorEqualsoperatorwithingroupEqualsoperatorwithinmodularblocksNotEqualsoperator")
	if err != nil {
		return nil, &GenericOpenAPIError{error: err.Error()}
	}

	localVarPath := localBasePath + "/v3/content_types/{content_type_uid}/entries"
	localVarPath = strings.Replace(localVarPath, "{"+"content_type_uid"+"}", url.PathEscape(parameterValueToString(r.contentTypeUid, "contentTypeUid")), -1)

	localVarHeaderParams := make(map[string]string)
	localVarQueryParams := url.Values{}
	localVarFormParams := url.Values{}

	if r.locale != nil {
		parameterAddToQuery(localVarQueryParams, "locale", r.locale, "")
	}
	if r.includeFallback != nil {
		parameterAddToQuery(localVarQueryParams, "include_fallback", r.includeFallback, "")
	}
	if r.includeBranch != nil {
		parameterAddToQuery(localVarQueryParams, "include_branch", r.includeBranch, "")
	}
	if r.query != nil {
		parameterAddToQuery(localVarQueryParams, "query", r.query, "")
	}
	if r.include != nil {
		parameterAddToQuery(localVarQueryParams, "include[]", r.include, "")
	}
	if r.limit != nil {
		parameterAddToQuery(localVarQueryParams, "limit", r.limit, "")
	}
	if r.skip != nil {
		parameterAddToQuery(localVarQueryParams, "skip", r.skip, "")
	}
	if r.asc != nil {
		parameterAddToQuery(localVarQueryParams, "asc", r.asc, "")
	}
	if r.desc != nil {
		parameterAddToQuery(localVarQueryParams, "desc", r.desc, "")
	}
	if r.onlyBASE != nil {
		parameterAddToQuery(localVarQueryParams, "only[BASE][]", r.onlyBASE, "")
	}
	if r.exceptBASE != nil {
		parameterAddToQuery(localVarQueryParams, "except[BASE][]", r.exceptBASE, "")
	}
	if r.includeCount != nil {
		parameterAddToQuery(localVarQueryParams, "include_count", r.includeCount, "")
	}
	// to determine the Content-Type header
	localVarHTTPContentTypes := []string{}

	// set Content-Type header
	localVarHTTPContentType := selectHeaderContentType(localVarHTTPContentTypes)
	if localVarHTTPContentType != "" {
		localVarHeaderParams["Content-Type"] = localVarHTTPContentType
	}

	// to determine the Accept header
	localVarHTTPHeaderAccepts := []string{}

	// set Accept header
	localVarHTTPHeaderAccept := selectHeaderAccept(localVarHTTPHeaderAccepts)
	if localVarHTTPHeaderAccept != "" {
		localVarHeaderParams["Accept"] = localVarHTTPHeaderAccept
	}
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["access_token"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["access_token"] = key
			}
		}
	}
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["api_key"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarHeaderParams["api_key"] = key
			}
		}
	}
	if r.ctx != nil {
		// API Key Authentication
		if auth, ok := r.ctx.Value(ContextAPIKeys).(map[string]APIKey); ok {
			if apiKey, ok := auth["environment"]; ok {
				var key string
				if apiKey.Prefix != "" {
					key = apiKey.Prefix + " " + apiKey.Key
				} else {
					key = apiKey.Key
				}
				localVarQueryParams.Add("environment", key)
			}
		}
	}
	req, err := a.client.prepareRequest(r.ctx, localVarPath, localVarHTTPMethod, localVarPostBody, localVarHeaderParams, localVarQueryParams, localVarFormParams, formFiles)
	if err != nil {
		return nil, err
	}

	localVarHTTPResponse, err := a.client.callAPI(req)
	if err != nil || localVarHTTPResponse == nil {
		return localVarHTTPResponse, err
	}

	localVarBody, err := ioutil.ReadAll(localVarHTTPResponse.Body)
	localVarHTTPResponse.Body.Close()
	localVarHTTPResponse.Body = ioutil.NopCloser(bytes.NewBuffer(localVarBody))
	if err != nil {
		return localVarHTTPResponse, err
	}

	if localVarHTTPResponse.StatusCode >= 300 {
		newErr := &GenericOpenAPIError{
			body:  localVarBody,
			error: localVarHTTPResponse.Status,
		}
		return localVarHTTPResponse, newErr
	}

	return localVarHTTPResponse, nil
}
